<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


 <!-- 데이터베이스 연동 관련 -->
		<!--데이터 소스 dataSource  -->
		<jee:jndi-lookup jndi-name="jdbc/myoracle" id="dataSource" resource-ref="true"/>
		
		<!-- 
			개발자대신 트랜잭션을 처리해주는 빈을 등록, 빈의 이름은 기술종류에 따라 여러 유형으로 나뉜다.
			JPA : JPATransactionManager (sun사의 ORM기술)
			Hibernate : HibernateTransactionManager (사설 ORM기술)
			jdbc : DataSourceTransactionManger
			mybatis : DataSourceTransactionManger (mybatis는 내부적으로 jdbc를 쓰기 때문에)	
		 -->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource" ></property>
		</bean>
		 
		<!-- 스프링이 지원하는 jdbc 기술 객체 -->
		<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
			<property name="dataSource" ref="dataSource"></property>
		</bean>

		<!-- mybatis가 지원하는 쿼리 객체 왜 써야 하나? 스프링으로부터 트랙잭션 등을 지원 받기 위해-->
		<!-- sqlsessionTemplate을 추출할려면, sqlsessionFactoryBean으로부터 가져올수 있다. -->
		<bean id="factoryBean" class="org.mybatis.spring.SqlSessionFactoryBean" >
			<property name="dataSource" ref="dataSource"></property>
			<property name="configLocation" value="classpath:com/academy/springdb/mybatis/config.xml"></property>
		</bean>
		
		<!-- DAO에 주입할 SqlSessionTemplate등록 -->
		<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
			<constructor-arg ref="factoryBean"/>
		</bean>
		
	 	<!-- 모든 서블릿에서 접근할 공통 빈을 등록한다 -->
		<context:component-scan base-package="com.academy.springdb.model"></context:component-scan>

</beans>